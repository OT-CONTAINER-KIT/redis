FROM alpine:3.15 as builder

ARG TARGETARCH

LABEL version=1.0 \
      arch=$TARGETARCH \
      description="A production grade performance tuned redis docker image created by Opstree Solutions"

ARG REDIS_DOWNLOAD_URL="http://download.redis.io/"

ARG REDIS_SENTINEL_VERSION="stable"

RUN apk add --no-cache su-exec tzdata make curl build-base linux-headers bash openssl-dev

WORKDIR /tmp

RUN if [ "${REDIS_SENTINEL_VERSION}" = "stable" ]; then \
        curl -fL -Lo redis-${REDIS_SENTINEL_VERSION}.tar.gz ${REDIS_DOWNLOAD_URL}/redis-stable.tar.gz; \
    else \
        if [ "${REDIS_VERSION:0:1}" = "v" ]; then \
            REDIS_VERSION=${REDIS_VERSION:1}; \
        fi; \
        curl -fL -Lo redis-${REDIS_SENTINEL_VERSION}.tar.gz ${REDIS_DOWNLOAD_URL}/releases/redis-${REDIS_SENTINEL_VERSION}.tar.gz; \
    fi && \
    tar xvzf redis-${REDIS_SENTINEL_VERSION}.tar.gz && \
    make -C redis-${REDIS_SENTINEL_VERSION} && \
    make -C redis-${REDIS_SENTINEL_VERSION} install BUILD_TLS=yes

FROM alpine:3.15

ARG TARGETARCH

ENV SENTINEL_PORT=26379

LABEL version=1.0 \
      arch=$TARGETARCH \
      description="A production grade performance tuned redis docker image created by Opstree Solutions"


COPY --from=builder /usr/local/bin/redis-cli /usr/local/bin/redis-cli
COPY --from=builder /usr/local/bin/redis-sentinel /usr/local/bin/redis-sentinel

RUN addgroup -S -g 1000 redis && adduser -S -G redis -u 1000 redis && \
    apk add --no-cache bash

COPY sentinel.conf /etc/redis/sentinel.conf

COPY entrypoint-sentinel.sh /usr/bin/entrypoint-sentinel.sh

COPY healthcheck-Sentinel.sh /usr/bin/healthcheck.sh

RUN chown -R 1000:0 /etc/redis && \
    chmod -R g+rw /etc/redis && \
    mkdir /sentinel-data && \
    chown -R 1000:0 /sentinel-data && \
    chmod -R g+rw /sentinel-data && \
    chmod -R g+rw /var/run

VOLUME ["/sentinel-data"]

WORKDIR /sentinel-data

EXPOSE ${SENTINEL_PORT}

USER 1000

ENTRYPOINT ["/usr/bin/entrypoint-sentinel.sh"]
